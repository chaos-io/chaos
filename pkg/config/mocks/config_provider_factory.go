// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chaos-io/chaos/pkg/config (interfaces: IConfigProviderFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	config "github.com/chaos-io/chaos/pkg/config"
	gomock "github.com/golang/mock/gomock"
)

// MockIConfigProviderFactory is a mock of IConfigProviderFactory interface.
type MockIConfigProviderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigProviderFactoryMockRecorder
}

// MockIConfigProviderFactoryMockRecorder is the mock recorder for MockIConfigProviderFactory.
type MockIConfigProviderFactoryMockRecorder struct {
	mock *MockIConfigProviderFactory
}

// NewMockIConfigProviderFactory creates a new mock instance.
func NewMockIConfigProviderFactory(ctrl *gomock.Controller) *MockIConfigProviderFactory {
	mock := &MockIConfigProviderFactory{ctrl: ctrl}
	mock.recorder = &MockIConfigProviderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfigProviderFactory) EXPECT() *MockIConfigProviderFactoryMockRecorder {
	return m.recorder
}

// NewConfigProvider mocks base method.
func (m *MockIConfigProviderFactory) NewConfigProvider() config.IConfigProvider {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewConfigProvider")
	ret0, _ := ret[0].(config.IConfigProvider)
	return ret0
}

// NewConfigProvider indicates an expected call of NewConfigProvider.
func (mr *MockIConfigProviderFactoryMockRecorder) NewConfigProvider() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewConfigProvider", reflect.TypeOf((*MockIConfigProviderFactory)(nil).NewConfigProvider))
}
