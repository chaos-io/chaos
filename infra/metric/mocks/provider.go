// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chaos-io/chaos/infra/metric (interfaces: IMeter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	metric "github.com/chaos-io/chaos/infra/metric"
	gomock "github.com/golang/mock/gomock"
)

// MockIMeter is a mock of IMeter interface.
type MockIMeter struct {
	ctrl     *gomock.Controller
	recorder *MockIMeterMockRecorder
}

// MockIMeterMockRecorder is the mock recorder for MockIMeter.
type MockIMeterMockRecorder struct {
	mock *MockIMeter
}

// NewMockIMeter creates a new mock instance.
func NewMockIMeter(ctrl *gomock.Controller) *MockIMeter {
	mock := &MockIMeter{ctrl: ctrl}
	mock.recorder = &MockIMeterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMeter) EXPECT() *MockIMeterMockRecorder {
	return m.recorder
}

// NewMetric mocks base method.
func (m *MockIMeter) NewMetric(arg0 string, arg1 []metric.MetricType, arg2 []string) (metric.IMetric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMetric", arg0, arg1, arg2)
	ret0, _ := ret[0].(metric.IMetric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewMetric indicates an expected call of NewMetric.
func (mr *MockIMeterMockRecorder) NewMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMetric", reflect.TypeOf((*MockIMeter)(nil).NewMetric), arg0, arg1, arg2)
}
